@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.Models.Users>

@{
   IEnumerable<NotesMarketPlace.Models.Downloads> downloads = ViewBag.Download;
   IEnumerable<NotesMarketPlace.Models.ReferenceData> status = ViewBag.status;
}

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container members">
    <div class="progress-3">
        <div class="progress-notes-2">
            <div class="row progress-dashboard">
                <div class="col-md-12">
                    @if(TempData["Deactivate"] != null){
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>@TempData["Deactivate"]</strong> @TempData["Message"]
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                 }
                </div>
                <div class="col-md-3 admin-label">
                    <h3 id="members-label">Members</h3>
                </div>
                <div class="col-md-9 search-label
                                    text-right">
                    <div class="progress-note-btn">
                        @using(Html.BeginForm("MembersAdmin","Admin",FormMethod.Get,new{}))
                        {
                        <input type="text" name="Search" id="search-enter-progress" placeholder="Search" title="Type in a name">
                        <button type="submit">Search</button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="progress-table" style="overflow-x:auto;">
            <table class="table" id="members-table">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">
                            SR NO.
                        </th>
                        <th scope="col"> @Html.ActionLink("FIRST NAME", "MembersAdmin", new { SortOrder=ViewBag.FirstNameSortParam,Search = Request.QueryString["Search"] }) </th>
                        <th scope="col"> @Html.ActionLink("LAST NAME", "MembersAdmin", new { SortOrder=ViewBag.LastNameSortParam,Search = Request.QueryString["Search"] }) </th>
                        <th scope="col">@Html.ActionLink("EMAIL", "MembersAdmin", new { SortOrder=ViewBag.EmailIDSortParam,Search = Request.QueryString["Search"] }) </th>
                        <th scope="col"> @Html.ActionLink("JOINING DATE", "MembersAdmin", new { SortOrder=ViewBag.DateSortParam,Search = Request.QueryString["Search"] }) </th>
                        <th scope="col">UNDER REVIEW NOTES</th>
                        <th scope="col">PUBLISHED NOTES</th>
                        <th scope="col">DOWNLOADED NOTES</th>
                        <th scope="col">TOTAL EXPENESS</th>
                        <th scope="col">TOTAL EARNINGS</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                   @* @{
                      IPagedList<NotesMarketPlace.Models.Users> AllMember = ViewBag.AllMembers;
                    }*@
                    @{
                    var count = 0;
                    if (Model.Count == 0)
                            {
                        <tr>
                            <td colspan="11" class="text-center NoRecord">No Records Found</td>
                        </tr>
                            }
                    }
                   
                    @foreach(var item in Model)
                                {
                <tr>
                    <td>@(count + ((Model.PageNumber - 1) * Model.PageSize) + 1)</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.EmailID</td>
                    <td>
                        @item.CreatedDate.Value.ToString("dd-MM-yyyy, HH:mm")
                    </td>
                    <td>
                        <a href="/Admin/NotesUnderReview?SellerName=@item.FirstName@item.LastName" class="count">@item.SellerNotes.Where(x=>(x.SellerID == @item.UserID && x.Status == @status.Where(r => r.Value.ToLower() == "in review").Select(r => r.ReferenceID).FirstOrDefault() )||(x.SellerID == @item.UserID && x.Status == @status.Where(r => r.Value.ToLower() == "submitted for review").Select(r => r.ReferenceID).FirstOrDefault() )).Count()</a>
                    </td>
                    <td>
                        <a href="/Admin/PublishedNotes?SellerName=@item.FirstName@item.LastName" class="count">@item.SellerNotes.Where(x=>x.SellerID == @item.UserID && x.Status == @status.Where(r => r.Value.ToLower() == "published").Select(r => r.ReferenceID).FirstOrDefault()).Count()</a>
                    </td>
                    <td>
                        <a href="/Admin/DownloadNotes?BuyerName=@item.FirstName@item.LastName" class="count">@downloads.Where(x => x.Downloader == @item.UserID && x.IsAttachmentDownloaded == true).Count()</a>
                    </td>
                    <td><a href="/Admin/DownloadNotes?BuyerName=@item.FirstName@item.LastName">$<span class="count">@downloads.Where(x => x.Downloader == @item.UserID).Select(x=>x.PurchasedPrice).Sum()</span></a></td>
                    <td><a href="/Admin/DownloadNotes?SellerName=@item.FirstName@item.LastName">$<span class="count">@item.Downloads.Where(x=>x.Seller == @item.UserID && x.IsSellerHasAllowedDownload == true && x.AttachmentPath != null).Select(x=>x.PurchasedPrice).Sum()</span></a></td>
                    <td>
                        <div class="dropdown admin-table">
                            <a class="dropbtn"><img src="~/Content/Admin/images/Dashboard/three-dot.png" alt="delete-icon" /></a>
                            <div class="dropdown-content">
                                <a href="/Admin/MemberDetails/@item.UserID">
                                    View
                                    More
                                    Details
                                </a>
                                <a  onclick="return confirm('Are you sure you want to make this member inactive?')" href="/Admin/DeactivateMember/@item.UserID">Deactivate</a>
                            </div>
                        </div>
                    </td>
                </tr>
                     {count = count+1;}
                                }
                    
                </tbody>
            </table>
        </div>
        <div class="pagination-section">
            <div class="pagination-notes">
                <div class="pagination-number">
                    @Html.PagedListPager(Model, page=> Url.Action("MembersAdmin",new{page,
             SearchPublished = Request.QueryString["SearchPublished"],
            SortOrderPublished = Request.QueryString["SortOrderPublished"]
                })
             ,new PagedListRenderOptions(){Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true,MaximumPageNumbersToDisplay = 5}
             )
                </div>
            </div>
        </div>
    </div>
</div>