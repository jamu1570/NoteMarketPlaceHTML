@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.Models.Users>

@{
   IEnumerable<NotesMarketPlace.Models.UserProfile> adminnumber = ViewBag.UsersProfiles;
}

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container manage-admin">
    <div class="User-Dashboard">
        <div class="row dashboard-1">
            <div class="col-md-12">
                @if(TempData["AddAdministrator"] != null){
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <strong>@TempData["AddAdministrator"] !</strong> @TempData["Message"].
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                 }
            </div>
            <div class="col-md-6 col-sm-6 col-xs-6
                                    text-left">
                <h3>Manage Adminstrator</h3>
            </div>
        </div>
    </div>
    <div class="progress-3">
        <div class="progress-notes-2">
            <div class="row progress-dashboard">
                <div class="col-md-3 admin-label">
                    <button> <a href="/Admin/AddAdministrator"> add administrator </a></button>
                </div>
                <div class="col-md-9 search-label text-right">
                    <div class="progress-note-btn">
                        @using(Html.BeginForm("Administrators","Admin",FormMethod.Get))
                        {
                        <input type="text" name="Search" id="search-enter-progress" placeholder="Search" title="Type
                                                            in a name">
                        <button type="submit">Search</button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="progress-table" style="overflow-x:auto;">
            <table class="table" id="manage-admin-table">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">SR NO.</th>
                        <th scope="col">@Html.ActionLink("FIRST NAME", "Administrators", new { SortOrder=ViewBag.FirstNameSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">@Html.ActionLink("LAST NAME", "Administrators", new { SortOrder=ViewBag.LastNameSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">@Html.ActionLink("EMAIL", "Administrators", new { SortOrder=ViewBag.EmailIDSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">@Html.ActionLink("PHONE NO.", "Administrators", new { SortOrder=ViewBag.DateSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">@Html.ActionLink("DATE ADDED", "Administrators", new { SortOrder=ViewBag.DateSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">@Html.ActionLink("ACTIVE", "Administrators", new { SortOrder=ViewBag.ActiveSortParam,Search = Request.QueryString["Search"] })</th>
                        <th scope="col">ACTION</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                    var count = 0;
                        if (Model.Count == 0)
                                {
                        <tr>
                            <td colspan="8" class="text-center NoRecord">No Records Found</td>
                        </tr>
                                }
                    }
                    @foreach(var item in Model)
                                {
                    <tr>
                        <td>@(count + ((Model.PageNumber - 1) * Model.PageSize) + 1)</td>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.EmailID</td>
                        <td>+@adminnumber.Where(x=>x.UserID == @item.UserID).Select(y=>y.PhoneNumberCountryCode +" "+y.PhoneNumber).FirstOrDefault()</td>
                        <td>
                            @item.ModifiedDate.Value.ToString("dd-MM-yyyy, HH:mm")
                        </td>
                        <td>
                            @if(@item.IsActive == true){
                            <text>YES</text>
                            }else{
                            <text>NO</text>
                            }
                        </td>
                        <td>            
                            <a onclick="return confirm('Are you sure you want to make this Admin Edit?')" href="/Admin/EditAdministrator/@item.UserID"> <img src="~/Content/Admin/images/Dashboard/edit.png" class="action-1" alt=""></a>
                          
                            <a onclick="return confirm('Are you sure you want to make this Admin inactive?')" href="/Admin/DeleteAdministrator/@item.UserID"> <img src="~/Content/Admin/images/Dashboard/delete-2.png" alt=""></a>
                        </td>
                    </tr>
                     {count = count+1;}
                    }
                </tbody>
            </table>
        </div>
        <div class="pagination-section">
            <div class="pagination-notes">
                <div class="pagination-number">

                    @Html.PagedListPager(Model, page => Url.Action("Administrators",new{page,
                  Search = Request.QueryString["Search"],
                   SortOrder = Request.QueryString["SortOrder"]
                 })
               ,new PagedListRenderOptions(){Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true,MaximumPageNumbersToDisplay = 5}
               )

                </div>
            </div>
        </div>
    </div>
</div>