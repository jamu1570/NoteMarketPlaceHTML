@using PagedList;
@using PagedList.Mvc;
@using System.IO;

@model IPagedList<NotesMarketPlace.Models.AllSearchNotes>
<!-- Top Image With Text -->
<div class="container-fluid p-0 Search-notes">
    <div class="Search-img-text">
        <h3 class="text-center">Search-Notes</h3>
    </div>
</div>
<div class="Search-filter-notes">
    <div class="container">
        <div id="notesfilter">
            <h3>Search and Filter Notes</h3>
            @using(Html.BeginForm("SearchNotesPage","HomePage",FormMethod.Get,new{id="AllSeachNote"}))
                        {
            <div class="searchnotes">
                <div class="search-filter">
                    <div class="search">
                        <input type="text" name="SearchText" id="search-enter" placeholder="Search notes here..." title="Type in a name">

                    </div>
                    <div class="filter">
                        <div class="flex-container">
                            <div style="flex-grow: 1">
                                @Html.DropDownList("NoteType", null, "Select your NoteType", new { id = "NoteType", name = "NoteType", @class = "form-control",onchange="NoteFunction();" })

                            </div>
                            <div style="flex-grow: 1">


                                @Html.DropDownList("Category", null, "Select your category",new { id = "Category", name = "Category", @class = "form-control",onchange="NoteFunction();" })

                            </div>
                            <div style="flex-grow: 1">
                                @Html.DropDownList("University", new SelectList(ViewBag.University,"UniversityName","UniversityName"), "Select your University",new { id = "University", name = "University", @class = "form-control" ,onchange="NoteFunction();"})

                            </div>
                            <div style="flex-grow: 1">

                                @Html.DropDownList("Course", new SelectList(ViewBag.Course,"Course","Course"), "Select your course",new { id = "Category", name = "Course", @class = "form-control",onchange="NoteFunction();" })

                            </div>
                            <div style="flex-grow: 1">
                                @Html.DropDownList("Country", null,"Select your Country", new { id = "Country", name = "Country", @class = "form-control",onchange="NoteFunction();" })

                            </div>
                            <div style="flex-grow: 1">
                               @*  @Html.DropDownList("Ratings", null,"Select your Ratings", new { id = "Ratings", name = "Ratings", @class = "form-control",onchange="NoteFunction();" })*@
                                <select class="form-control" id="exampleFormControlSelect1">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                        }
        </div>

        <div class="total-books">
            <div id="notes-total">
                <h3>Total @ViewBag.TotalNotesRecord Notes</h3>
            </div>
            <div class="notes-cards">
                @{ var counter = 1; }

                @* @{

                        var AllPublished = new List<NotesMarketPlace.ViewModel.AllSearchNotes>();
                    }

                    @foreach (var item in Model)
                    {
                        if (item.status.Value == "Published")
                        {
                            AllPublished.Add(item);
                        }

                    }*@
                <div class="row row-notes-1">

                    @if (Model.Count == 0)
                        {
                    <div class=" ml-3 NoRecord">
                        <h3>No Records Found </h3>
                    </div>
                        }

                    @foreach(var item in Model)
                                {
                    <div class="col-md-4">
                        <div class="card">
                            <img src="@item.NoteDetails.DisplayPicture" style="height:240px; width:100%;" class="card-img-top" alt="...">
                            <div class="card-body">
                                <a href="2.2.2-Notes-Deatail.html">
                                    <h5 class="card-title">
                                        <a href="/HomePage/NoteDetails/@item.NoteDetails.SellerNotesID">   @item.NoteDetails.Title </a>
                                    </h5>
                                </a>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <p class="card-detail-notes">
                                        <i class="fa fa-university"></i>
                                        @item.NoteDetails.UniversityName
                                    </p>
                                    <p class="card-detail-notes">
                                        <i class="fa fa-university"></i>@item.NoteDetails.NumberOfPages
                                        Pages
                                    </p>
                                    <p class="card-detail-notes">
                                        <i class="fa fa-university"></i>@item.NoteDetails.CreatedDate
                                    </p>
                                    <p class="card-detail-notes"><i class="fa fa-flag"></i><span style="color: red;">@item.NoteDetails.SellerNotesReportedIssues.Where(x => x.NoteID == @item.NoteDetails.SellerNotesID).Count() Users marked this note as inappropriate</span></p>
                                  @*  <div class="row card-star">*@
                                        @{
                                                var ratingSum = @item.NoteDetails.SellerNotesReviews.Where(x => x.NoteID == @item.NoteDetails.SellerNotesID).Select(x => x.Ratings).Sum();
                                                var ratingCount = @item.NoteDetails.SellerNotesReviews.Where(x => x.NoteID == @item.NoteDetails.SellerNotesID).Count();
                                        }
                                        @if (ratingCount > 0)
                                            {

                                                for (int i = 1; i <= Math.Round(ratingSum / ratingCount); i++)
                                                {
                                        <i class="text-warning fa fa-star"></i>
                                                }
                                                for (int i = 1; i <= 5 - Math.Round(ratingSum / ratingCount); i++)
                                                {
                                        <i class="text-muted fa fa-star"></i>
                                                }
                                            }
                                        @if (ratingCount == 0)
                                            {
                                                for (int i = 1; i <= 5; i++)
                                                {
                                        <i class="text-muted fa fa-star"></i>
                                                }
                                            }
                                    <span>@item.NoteDetails.SellerNotesReviews.Where(x => x.NoteID == @item.NoteDetails.SellerNotesID).Count() Reviews</span>
                                       @* </div>*@
                                </li>
                            </ul>
                        </div>
                    </div>

                                    if (counter % 3 == 0)
                            {
                @:</div>
                @:<div class="row row-notes-1">
                            }
                            counter++;

                              }

                </div>

            </div>
        </div>



        <div class="pagination-section">
            <div class="pagination-notes">
                <div class="pagination-number">

                    @Html.PagedListPager(Model, page=> Url.Action("SearchNotesPage",new{page,
                    SearchText = Request.QueryString["SearchText"],
                    NoteType = Request.QueryString["NoteType"],
                    Country = Request.QueryString["Country"],
                    Category = Request.QueryString["Category"],
                    University = Request.QueryString["University"],
                      Course = Request.QueryString["Course"]

                    })
                    ,new PagedListRenderOptions(){Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true}
                    )

                    @*             <a href="#">
                            <i class="fa fa-angle-left"></i>
                        </a>
                        <a href="#" class="active">1</a>
                        <a href="#">2</a>
                        <a href="#">3</a>
                        <a href="#">4</a>
                        <a href="#">5</a>
                        <a href="#">
                            <i class="fa fa-angle-right"></i>*@
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


